#!/usr/bin/env python

"""Atomically edit foundationdb.conf. The fdbserver processes automatically pick up changes to the file so saving
    it in the middle of things can break stuff.

    Usage:
        vifdb [-e/--editor] [-f/--file]

        Editor defaults to vi.
        File defaults to the standard foundationdb.conf location for your OS.
"""

from pathlib import Path
from uuid import uuid4

import argparse
import os
import platform
import shutil
import subprocess
import sys


def main(conffile: Path, editor: str) -> None:
    """
    Edit the foundationdb.conf file. We create the temporary file in the same directory as the original file because
    rename() is only guaranteed to be atomic if both files are on the same filesystem.

    Args:
        conffile: A Path to the foundationdb.conf file
        editor: Which editor to use. Defaults to vi.
    """

    uuid = uuid4()
    tmpfile = Path(f"{conffile.parents[0]}/foundationdb.conf-{uuid}.tmp")
    shutil.copy(conffile, tmpfile)

    try:
        subprocess.run([editor, tmpfile], stderr=subprocess.PIPE, check=True)
    except subprocess.CalledProcessError:
        print("Your editor emitted a non-zero return code. The original file remains in place.")
        sys.exit(1)

    os.rename(tmpfile, conffile)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(
        prog="vifdb", description="Atomically edits foundationdb.conf"
    )
    parser.add_argument("-e", "--editor", default="vi", help="Which editor to use. Defaults to vi")
    parser.add_argument(
        "-f", "--file", help="Path to the foundationdb configuration file"
    )

    args = parser.parse_args()
    if args.file:
        conffile = Path(args.file)
    else:
        myos = platform.system()
        match myos:
            case "Darwin":
                conffile = Path("/usr/local/etc/foundationdb/foundationdb.conf")
            case "Linux":
                conffile = Path("/etc/foundationdb/foundationdb.conf")
            case _:
                print("We only know about Linux and macOS.")
                sys.exit(1)

    editor = args.editor

    main(conffile, editor)
